{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FULL_STACK1-2\\\\client\\\\src\\\\components\\\\logout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleLogout = async () => {\n      try {\n        // Send a GET request to your backend logout route\n        const response = await fetch('/logout', {\n          method: 'GET',\n          credentials: 'include' // Include cookies in the request\n        });\n\n        if (response.status === 200) {\n          window.alert('Logged out successfully');\n          navigate('/login'); // Redirect to the login page after logout\n        } else {\n          window.alert('Logout failed');\n        }\n      } catch (error) {\n        console.error('Error during logout:', error);\n        // Handle any network or other errors that may occur during logout\n      }\n    };\n\n    handleLogout(); // Call the logout function when the component mounts\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logging Out...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","Logout","_s","navigate","handleLogout","response","fetch","method","credentials","status","window","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/FULL_STACK1-2/client/src/components/logout.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const handleLogout = async () => {\r\n      try {\r\n        // Send a GET request to your backend logout route\r\n        const response = await fetch('/logout', {\r\n          method: 'GET',\r\n          credentials: 'include', // Include cookies in the request\r\n        });\r\n\r\n        if (response.status === 200) {\r\n         \r\n          window.alert('Logged out successfully');\r\n          navigate('/login'); // Redirect to the login page after logout\r\n        }\r\n         else\r\n          {\r\n             window.alert('Logout failed');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during logout:', error);\r\n        // Handle any network or other errors that may occur during logout\r\n      }\r\n    };\r\n\r\n    handleLogout(); // Call the logout function when the component mounts\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Logging Out...</h2>\r\n      {/* You can optionally display a loading message or spinner here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;UACtCC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,SAAS,CAAE;QAC1B,CAAC,CAAC;;QAEF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UAE3BC,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC;UACvCR,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtB,CAAC,MAEC;UACGO,MAAM,CAACC,KAAK,CAAC,eAAe,CAAC;QAClC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;;IAEDR,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAqB,EAAA,GADxBlB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}